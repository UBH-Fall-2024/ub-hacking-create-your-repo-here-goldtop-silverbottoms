import face_recognition
import numpy as np

# Load the known face encoding from the saved file
known_face_encoding = np.load("known_face_encoding.npy")

# Parameters
num_images = 10  # Number of test images to encode

# List to store test face encodings
test_encodings_list = []

# Load and encode each test image
for i in range(num_images):
    filename = f"test_image_{i+1}.jpg"
    print(f"Processing {filename}")

    # Load the image
    image = face_recognition.load_image_file(filename)

    # Get the face encoding
    face_encodings = face_recognition.face_encodings(image)

    if face_encodings:
        test_encodings_list.append(face_encodings[0])
        print(f"Encoding for {filename} captured")
    else:
        print(f"No face detected in {filename}")

# Ensure we have enough encodings to average
if len(test_encodings_list) < num_images:
    print("Insufficient test encodings captured. Try again.")
    exit()

# Average the test encodings to create a single robust encoding for comparison
test_face_encoding = np.mean(test_encodings_list, axis=0)
print("Test face encoding generated by averaging multiple images.")

# Compare the averaged test encoding to the known encoding
match = face_recognition.compare_faces([known_face_encoding], test_face_encoding)

if match[0]:
    print("Face recognized!")
else:
    print("Face not recognized.")
